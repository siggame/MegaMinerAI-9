#move ships
area = 1
modifierX = random.randrange(-50,50) * (player+1)
modifierY = random.randrange(-50,50) * (player+1)
for ship in ships:
  if ship.getType() != "Warp Gate" and ship.getType() != "Mine" and ship.getType() != "Weapons Platform" and ship.getOwner() == player:
    #Move weapons platform to the edge of the map
    if area < 75:
      if area%7 == 0:
        self.moveTo(ship,-250+modifierX,250-modifierY)
      elif area%7 == 1:
        self.moveTo(ship,250+modifierX,-250-modifierY)
      elif area%7 == 2:
        self.moveTp(ship,0+modifierX,0-modifierY)
      elif area%7 == 3:
        self.moveTo(ship, 100+modifierX,100-modifierY)
      elif area%7 == 4:
        self.moveTo(ship,-100+modifierX,-100-modifierY)
      elif area%7 == 5:
        self.moveTo(ship,200+modifierX,-100-modifierY)
      elif area%7 == 6:
        self.moveTo(ship,-100+modifierX,200-modifierY)
    else:
      self.moveToNearest(ship)
  area += 1 
dist = 0

#Move and attack
for ship in ships:
  furthestDist = -1
  furthestEnemy = ships[0]
  if ship.getOwner() == player:
    if ship.getAttacksLeft() > 0:
      for enemy in ships:
        if enemy.getOwner() != player: 
          dist = self.distance(ship.getX(),enemy.getX(),ship.getY(),enemy.getY())
          if dist < ship.getRange() + enemy.getRadius() and dist > furthestDist:
            furthestEnemy = enemy
            furthestDist = dist
      if furthestDist != -1:
        ship.attack(furthestEnemy)
        
#Old moveTo       
def moveTo(self,ship,x,y):
  distance = (((ship.getX() - x)**2) + ((ship.getY()- y)**2))**.5
  if ship.getType == "Warp Gate":
    distRatio = ship.getRange() / (1+distance)
  else:
    distRatio = ship.getMovementLeft() / (1+distance)
  if distance < 15:
    pass
  elif distRatio > 1:
    ship.move(x,y)
  else:
    distRatio /= 2
    startX = int(ship.getX()*(1-distRatio))
    startY = int(ship.getY()*(1-distRatio))
    endX = int(x*distRatio)
    endY = int(y*distRatio)
    ship.move(startX + endX, startY + endY)
    
    
  #Returns the the furthest point along a path to target      
  def moveTo(self,ship,x,y):
    distance = (((ship.getX() - x)**2) + ((ship.getY()- y)**2))**.5
    if ship.getType == "Warp Gate":
      distRatio = ship.getRange() / (1+distance)
    else:
      distRatio = ship.getMovementLeft() / (1+distance)
    if distance < 15:
      pass
    elif distRatio > 1:
      ship.move(x,y)
    else:
      distRatio /= 2
      startX = int(ship.getX()*(1-distRatio))
      startY = int(ship.getY()*(1-distRatio))
      endX = int(x*distRatio)
      endY = int(y*distRatio)
      return [startX + endX, startY + endY]
